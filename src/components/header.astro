---
import Icon from './icon.astro';

export interface NavItem {
  title: string;
  url: string;
}

const navItems: Array<NavItem> = [
  { title: "Why", url: "#why" },
  { title: "What", url: "#what" },
  { title: "How", url: "#how" },
  { title: "FAQ", url: "#faq" },
];
---

<header
  id="page-header"
  class="absolute bottom-0 z-20 flex w-full items-center justify-between border-b border-transparent px-8 py-4"
>
  <div class="grid grid-cols-8 w-full">
    <div class="flex items-center gap-6 col-span-3">
      <a class="hover:text-rose" href="https://github.com/cryingpotat0/tailor-landing-page">
        <Icon icon="github" class="h-6 w-6" />
      </a>
      <a class="hover:text-rose" href="https://twitter.com/cryingpotat0">
        <Icon icon="twitter" class="h-6 w-6" />
      </a>
    </div>
    <a class="col-span-2 flex items-center justify-center gap-3 hover:text-rose text-primary" href="#">
      <h1 class="sr-only">Tailor</h1>
      <Icon icon="tailor" class="h-10" />
      <h1 class="font-bold">Tailor</h1>
    </a>
    <div class="col-span-3">
      <div class="flex items-center justify-end gap-6 font-bold">
        <nav class="hidden sm:block">
          <ul class="flex items-center gap-6">
            {
              navItems.map(({ title, url }) => (
                <li>
                  <a class="text-sm hover:text-rose" href={url}>
                    {title}
                  </a>
                </li>
              ))
            }
          </ul>
        </nav>
        <button
          id="open-nav-button"
          type="button"
          class="btn sm:hidden"
          aria-label="Navigation"
        >
          <Icon icon="menu" class="h-8 text-primary" />
        </button>
      </div>
      <div id="menu-modal" class="modal hidden" aria-hidden="true">
        <div class="fixed inset-0 bg-secondary px-8 py-4 text-primary">
          <div class="space-y-4" role="dialog" aria-modal="true">
            <header class="text-right">
              <button
                id="close-nav-button"
                type="button"
                class="btn"
                aria-label="Close navigation"
              >
                <Icon icon="close" class="h-8 text-primary" />
              </button>
            </header>
            <div class="flex justify-center">
              <Icon icon="tailor" class="h-16" />
            </div>
            <nav>
              <ul class="flex flex-col font-bold">
                {
                  navItems.map(({ title, url }) => (
                    <li>
                      <a class="block py-4 text-center text-xl" href={url}>
                        {title}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </nav>
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .fixed-header {
    @apply fixed bottom-auto top-0;
    @apply border-primary bg-secondary text-primary;
  }
  .modal.is-open {
    @apply block;
  }
</style>
