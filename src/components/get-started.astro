---

---


<div>
  <!-- Get started button with email input -->
  <div class="w-full text-primary flex items-center justify-center mt-3">
    <div class="text-primary text-sm">
      <input type="email" class="p-2 rounded-l-lg" placeholder="Email" id="get-started-email"/>
    </div>
    <div class="text-primary text-sm">
      <button class="p-2 bg-buff text-secondary hover:bg-rose text-sm rounded-r-lg disabled:bg-rose" id="get-started-button">Get Started</button>
    </div>
  </div>
  <!-- error messages if they exist -->
  <div class="w-full text-primary flex items-center justify-center mt-3">
    <div class="text-primary text-sm" id="get-started-error"></div>
  </div>
</div>


<script>
    const userAgentNotDesktopChrome = () => {
      var userAgent = navigator.userAgent;
      var isChrome = userAgent.includes('Chrome') || userAgent.includes('Chromium');
      var isDesktop = !userAgent.includes('Mobile');

          // If the browser is Chrome (or Chromium) and isDesktop is true, return false (meaning it is desktop Chrome)
          // Otherwise, return true (meaning it is not desktop Chrome)
          return !(isChrome && isDesktop);
      }



    const onclick = async (event) => {
        try {
            // First disable the button and set it's text to "Loading..."
            document.getElementById("get-started-button").disabled = true;
            document.getElementById("get-started-button").innerText = "Loading...";

            const email = document.getElementById("get-started-email").value;
            const validateEmail = (email) => {
                return String(email)
                    .toLowerCase()
                    .match(
                            /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|.(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
                    );
            };
            const endpoint = 'https://cryingpotato-tailorEmailHandler.web.val.run';
            if (!validateEmail(email)) {
                throw new Error('Invalid email');
            }
            try {
                await fetch(endpoint, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email }),
                })

                // Redirect to edit-tailor.cryingpotato.com
            } catch(e) {
                throw new Error('Failed to register, try again later.');
            }

            if (userAgentNotDesktopChrome()) {
                throw new Error('This experience only works on Desktop Chrome due to WebContainer limitations.');
            }

            window.location.href = "https://edit-tailor.cryingpotato.com";
        } catch(e) {
            document.getElementById("get-started-button").disabled = false;
            document.getElementById("get-started-button").innerText = "Get Started";
            console.error(e);
            document.getElementById("get-started-error").innerText = e.message;
        }
    }

    document.getElementById("get-started-button").addEventListener("click", onclick);
</script>
